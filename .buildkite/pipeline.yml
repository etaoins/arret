cached-ecr-build-env: &cached-ecr-build-env
  plugins:
    - seek-oss/docker-ecr-cache#v1.9.0:
        target: build-env
        cache-on:
          - Cargo.lock
    - docker#v3.7.0

steps:
  - label: ':muscle: Test ARM64 Cortex'
    branches: '!master !renovate/npm-definitely-typed-deps !renovate/eslint-deps !renovate/vs-code-deps'
    command: ./.buildkite/build-and-test.sh
    plugins:
      - docker-compose#v3.7.0:
          run: build-env
    agents:
      queue: arm64

  - label: ':muscle: Test ARM64 Graviton'
    branches: '!renovate/npm-definitely-typed-deps !renovate/eslint-deps !renovate/vs-code-deps'
    command: ./.buildkite/build-and-test.sh
    agents:
      queue: graviton
    <<: *cached-ecr-build-env

  - label: ':ubuntu: Test x86-64'
    command:
      - ./.buildkite/build-and-test.sh

      - "echo '--- :sleuth_or_spy: Checking release'"
      - RUSTFLAGS="-Copt-level=0" cargo check --release
    <<: *cached-ecr-build-env

  - label: ':fedora: Test LLVM Assert'
    branches: '!master'
    command:
      - "echo '--- :prettier: Checking rustfmt'"
      - cargo fmt -- --check

      - ./.buildkite/build-and-test.sh
    plugins:
      - seek-oss/docker-ecr-cache#v1.9.0:
          dockerfile: ./.buildkite/llvm-assert.Dockerfile
      - docker#v3.7.0

  - label: ':typescript: Test VS Code extension'
    command:
      - ./.buildkite/vscode-extension-tests.sh
    plugins:
      - seek-oss/docker-ecr-cache#v1.9.0:
          dockerfile: ./editors/code/Dockerfile
          ecr-name: build-cache/arret/vscode-extension
          cache-on:
            - ./editors/code/yarn.lock
            - ./editors/code/src/test/vsCodeVersion.ts
      - docker#v3.7.0:
          volumes:
            - '/workdir/editors/code/node_modules'
            - '/workdir/editors/code/.vscode-test'

  - wait

  - label: ':rust: Check (Rust Beta)'
    branches: 'master'
    command:
      - "echo '--- :rust: Installing Rust beta'"
      - rustup default beta

      - "echo '--- :male-detective: Checking debug'"
      - cargo check

      - "echo '--- :female-detective: Checking release'"
      - RUSTFLAGS="-Copt-level=0" cargo check --release
    <<: *cached-ecr-build-env

  - label: ':rocket: Push REPL Image'
    branches: 'master'
    plugins:
      - docker-login#v2.0.1:
          username: etaoins
          password-env: DOCKER_HUB_PASSWORD
      - docker-login#v2.0.1:
          server: docker.pkg.github.com
          username: etaoins
          password-env: GITHUB_TOKEN
      - docker-compose#v3.7.0:
          push:
            - repl:etaoins/arret:repl
            - repl:docker.pkg.github.com/etaoins/arret/repl
          env:
            - BUILDKITE_COMMIT
    concurrency_group: 'push-repl-image'
    concurrency: 1

  - label: ':books: Update Rustdoc'
    branches: 'master'
    command:
      - "echo '--- :book: Building rustdoc'"
      - cargo doc --no-deps

      - "echo '--- :rust: Installing awscli'"
      - apt-get update
      - DEBIAN_FRONTEND=noninteractive apt-get -y install awscli

      - ./.buildkite/sync-rustdoc.sh
    <<: *cached-ecr-build-env
    concurrency_group: 'update-rustdoc'
    concurrency: 1
