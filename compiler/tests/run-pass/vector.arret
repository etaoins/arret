(import [stdlib base])
(import [stdlib test])

(defn test-vector! () ->! ()
  (assert-eq! [] (vector))
  (assert-eq! [1] (vector 1))
  (assert-eq! [1 2] ((black-box! vector) 1 2))
  (assert-eq! [1 2 3] (vector 1 2 (black-box! 3))))

(defn test-vector-ref! () ->! ()
  (assert-eq! 1 (vector-ref [1 2 3] 0))
  (assert-eq! 2 ((black-box! vector-ref) [1 2 3] 1))
  (assert-eq! 3 (vector-ref (black-box! [1 2 3]) 2)))

(defn test-vector-length! () ->! ()
  (assert-eq! 0 (vector-length []))
  (assert-eq! 1 ((black-box! vector-length) [1]))
  (assert-eq! 2 (vector-length (black-box! [1 2])))
  (assert-eq! 3 ((black-box! vector-length) (black-box! [1 2 3]))))

(defn test-vector->list! () ->! ()
  (assert-eq! '(1) (vector->list [1]))
  (assert-eq! '(1 2) ((black-box! vector->list) [1 2]))
  (assert-eq! '(1 2 3) (vector->list (black-box! [1 2 3]))))

(defn test-vector-extend! () ->! ()
  (assert-eq! [1 2 3 4 5 6]
    (vector-extend
      (vector-extend [1 2 3] 4) 5 6)))

(defn test-vector-assoc! () ->! ()
  ; Inline vector
  (assert-eq! [one two three]
    (vector-assoc
      (vector-assoc [two two two] 0 'one)
      2 'three))

  ; External vector
  (assert-eq! [false false false false false]
    (vector-assoc [false false true false false] 2 false)))

(defn test-vector-append! () ->! ()
  (assert-eq! [] (vector-append))

  (assert-eq! [1 2 3] (vector-append [] [1 2 3]))
  (assert-eq! [1 2 3] (vector-append [1] [2 3]))
  (assert-eq! [1 2 3] (vector-append [1 2] [3]))
  (assert-eq! [1 2 3 4 5 6] (vector-append [1 2 3] [4 5 6]))

  (assert-eq! [1 2 3] (vector-append [1] [2] [3])))

(defn test-vector-take! () ->! ()
  (assert-eq! [] (vector-take -1 [1 2 3 4 5 6]))
  (assert-eq! [] (vector-take 0 [1 2 3 4 5 6]))
  (assert-eq! [1 2 3] (vector-take 3 [1 2 3 4 5 6]))
  (assert-eq! [1 2 3 4 5] (vector-take 5 [1 2 3 4 5 6]))
  (assert-eq! [1 2 3 4 5 6] (vector-take 6 [1 2 3 4 5 6]))
  (assert-eq! [1 2 3 4 5 6] (vector-take 100 [1 2 3 4 5 6])))

(defn main! () ->! ()
  (test-vector!)
  (test-vector-ref!)
  (test-vector-length!)
  (test-vector->list!)
  (test-vector-assoc!)
  (test-vector-extend!)
  (test-vector-append!)
  (test-vector-take!))