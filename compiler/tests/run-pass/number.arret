(import [stdlib base])
(import [stdlib test])

(defn test-zero? () ->! ()
  (assert-eq! true (zero? 0))
  (assert-eq! true (zero? (black-box! 0.0)))
  (assert-eq! false (zero? ##NaN))

  (assert-eq! false (zero? 10))
  (assert-eq! false (zero? (black-box! 10.0)))
  (assert-eq! false (zero? (black-box! ##Inf)))
  (assert-eq! false (zero? ##-Inf)))

(defn test-pos? () ->! ()
  (assert-eq! false (pos? 0))
  (assert-eq! false (pos? (black-box! 0.0)))
  (assert-eq! false (pos? ##NaN))

  (assert-eq! true (pos? 10))
  (assert-eq! false (pos? (black-box! -10.0)))
  (assert-eq! true (pos? (black-box! ##Inf)))
  (assert-eq! false (pos? ##-Inf)))

(defn test-neg? () ->! ()
  (assert-eq! false (neg? 0))
  (assert-eq! false (neg? (black-box! 0.0)))
  (assert-eq! false (neg? ##NaN))

  (assert-eq! false (neg? 10))
  (assert-eq! true (neg? (black-box! -10.0)))
  (assert-eq! false (neg? (black-box! ##Inf)))
  (assert-eq! true (neg? ##-Inf)))

(defn test-nan? () ->! ()
  (assert-eq! false (nan? 10.0))
  (assert-eq! true (nan? (black-box! ##NaN)))
  (assert-eq! true (nan? ##NaN))
  (assert-eq! false (nan? ##Inf))
  (assert-eq! false (nan? (black-box! ##-Inf))))

(defn test-infinite? () ->! ()
  (assert-eq! false (infinite? 3.0))
  (assert-eq! true (infinite? (black-box! ##Inf)))
  (assert-eq! true (infinite? ##-Inf))
  (assert-eq! false (infinite? ##NaN)))

(defn test-float! () ->! ()
  (assert-eq! 1.0 (float 1))
  (assert-eq! 0.0 (float (black-box! 0)))
  (assert-eq! -1.0 (float -1))

  (assert-eq! 1.0 (float (black-box! 1.0)))
  (assert-eq! 0.0 (float 0.0))
  (assert-eq! -1.0 (float -1.0)))

(defn test-int! () ->! ()
  (assert-eq! 1 (int (black-box! 1)))
  (assert-eq! 0 (int 0))
  (assert-eq! -1 (int -1))

  ; TODO: Test error cases
  (assert-eq! 1 (int 1.0))
  (assert-eq! 0 (int (black-box! 0.0)))
  (assert-eq! -1 (int -1.0)))

(defn test-comparisons! () ->! ()
  ; These are all always true
  (assert-eq! true (< -1))
  (assert-eq! true (<= (black-box! 0)))
  (assert-eq! true (== 1.0))
  (assert-eq! true (> (black-box! -1.0)))
  (assert-eq! true (>= ##NaN))

  ; NaNs always compare false
  (assert-eq! false (< ##NaN (black-box! ##NaN)))
  (assert-eq! false (<= (black-box! ##NaN) ##NaN))
  (assert-eq! false (== (black-box! ##NaN) (black-box! ##NaN)))
  (assert-eq! false (> ##NaN ##NaN))
  (assert-eq! false (>= ##NaN ##NaN))

  (assert-eq! true (< 1 2.0 (black-box! 3)))
  (assert-eq! true (<= 1 (black-box! 2.0) 3))
  (assert-eq! false (== 1 (black-box! 2.0) (black-box! 3)))
  (assert-eq! false (> (black-box! 1) 2.0 3))
  (assert-eq! false (>= (black-box! 1) 2.0 (black-box! 3)))

  (assert-eq! false (< 1 (black-box! 2) (black-box! 2.0)))
  (assert-eq! true (<= (black-box! 1) (black-box! 2) (black-box! 2.0)))
  (assert-eq! false (== 1 2 2.0))
  (assert-eq! false (> 1 2 (black-box! 2.0)))
  (assert-eq! false (>= 1 (black-box! 2) 2.0))

  (assert-eq! false (< (black-box! 1) (black-box! 1.0)))
  (assert-eq! true (<= 1 (black-box! 1.0)))
  (assert-eq! true (== (black-box! 1) 1.0))
  (assert-eq! false (> (black-box! 1) (black-box! 1.0)))
  (assert-eq! true (>= 1 1.0))

  (assert-eq! false (< ##Inf (black-box! ##-Inf)))
  (assert-eq! false (<= (black-box! ##Inf) ##-Inf))
  (assert-eq! false (== (black-box! ##Inf) (black-box! ##-Inf)))
  (assert-eq! true (> ##Inf (black-box! ##-Inf)))
  (assert-eq! true (>= (black-box! ##Inf) ##-Inf))

  (assert-eq! false (< ##Inf (black-box! ##-Inf) (black-box! ##-Inf)))
  (assert-eq! false (<= (black-box! ##Inf) ##-Inf ##-Inf))
  (assert-eq! false (== (black-box! ##Inf) (black-box! ##-Inf) (black-box! ##-Inf)))
  (assert-eq! false (> ##Inf ##-Inf (black-box! ##-Inf)))
  (assert-eq! true (>= ##Inf ##-Inf ##-Inf)))

(defn test-even-odd! () ->! ()
  (assert-eq! false (even? -1))
  (assert-eq! true (odd? -1))

  (assert-eq! true (even? 0))
  (assert-eq! false (odd? 0))

  (assert-eq! false (even? 1))
  (assert-eq! true (odd? 1))

  (assert-eq! true (even? 2))
  (assert-eq! false (odd? 2)))

(defn test-min-max! () ->! ()
  (assert-eq! 0 (min 0))
  (assert-eq! 0 (max 0))

  (assert-eq! true (nan? (min ##NaN)))
  (assert-eq! true (nan? (max ##NaN)))

  (assert-eq! true (nan? (float (min ##NaN 0))))
  (assert-eq! true (nan? (float (min 0 ##NaN))))
  (assert-eq! true (nan? (float (max ##NaN 0))))
  (assert-eq! true (nan? (float (max 0 ##NaN))))

  (assert-eq! 1 (min 1 2 3))
  (assert-eq! 3 (max 1 2 3))

  (assert-eq! 1.0 (min 3.0 2 1.0))
  (assert-eq! 3.0 (max 3.0 2 1.0))

  (assert-eq! ##-Inf (min ##-Inf ##Inf))
  (assert-eq! ##Inf (max ##-Inf ##Inf)))

(defn main! () ->! ()
  (test-zero?)
  (test-pos?)
  (test-neg?)
  (test-nan?)
  (test-infinite?)
  (test-float!)
  (test-int!)
  (test-comparisons!)
  (test-even-odd!)
  (test-min-max!))