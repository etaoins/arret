(import [stdlib base])
(import [stdlib test])

(defn arg-is-self-equal (arg) -> Bool
  ; This is very tempting to simpify to `true` but that's not valid for NaN
  (= arg arg))

(defn test-int-equality! ()
  (assert-eq (black-box! 1) (black-box! 1))
  (assert-ne (black-box! 1) (black-box! 2)))

(defn test-bool-equality! ()
  (assert-eq (black-box! true) (black-box! true))
  (assert-ne (black-box! true) (black-box! false))
  (assert-eq (black-box! false) (black-box! false)))

(defn test-list-equality! ()
  (assert-eq (black-box! ()) (black-box! ()))
  (assert-ne (black-box! ()) (black-box! '(1 2 3)))
  (assert-eq true ((black-box! =) (black-box! ()) (black-box! ()))))

(defn test-nan-equality! ()
  (assert-eq false (= ##NaN ##NaN))
  (assert-eq false ((black-box! =) ##NaN ##NaN))
  (assert-eq false (= (black-box! ##NaN) (black-box! ##NaN)))
  (assert-eq false ((black-box! =) ##NaN ##NaN))

  (assert-eq false (arg-is-self-equal (black-box! ##NaN))))

(defn main! ()
  (test-int-equality!)
  (test-bool-equality!)
  (test-list-equality!)
  (test-nan-equality!)

  ())