(import [risp internal primitives])

(defmacro 1 (macro-rules))
         ;^ ERROR expected symbol
         
(defmacro a b) ;~ ERROR macro specification must be a list
(defmacro a (macro-fn)) ;~ ERROR unsupported macro type
(defmacro a (macro-rules
  [(...) false]
   ;^^^ ERROR ellipsis can only be used as part of a zero or more match
))

(defmacro no-rules (macro-rules))
(no-rules) ;~ ERROR no matching macro rule

(defmacro _ (macro-rules #{a 1}))
                            ;^ ERROR expected symbol

(defmacro _ (macro-rules 1))
                        ;^ ERROR expected a macro rule vector
                    
(defmacro no-template-datum (macro-rules
  [()]
 ;^^^^ ERROR expected a macro rule vector with two elements
))

(defmacro more-than-one-template-datum (macro-rules
  [() 1 2]
 ;^^^^^^^^ ERROR expected a macro rule vector with two elements
))

(defmacro non-list-pattern (macro-rules
  [self 1]
  ;^^^^ ERROR expected a macro rule pattern list
))

(defmacro m (macro-rules
  [((list1 ...) (list2 ...)) ([list1 list2] ...)]
                            ;^^^^^^^^^^^^^^^^^^^ ERROR subtemplate references macro variables from multiple subpatterns
))

(defmacro m (macro-rules
  [(expr ...) (5 ...)]
             ;^^^^^^^ ERROR subtemplate does not include any macro variables
))

(defmacro vm (macro-rules [((l ... r ...)) true]))
                                  ;^ ERROR multiple zero or more matches in the same sequence

(defmacro a (macro-rules [(x x) x]))
                            ;^ ERROR duplicate definition

(defmacro return-one (macro-rules [() 1]))
(return-one extra-arg) ;~ ERROR no matching macro rule

; Literal doesn't match
(defmacro for (macro-rules #{in} [(x in y) [x y]]))
(for 1 for 2) ;~ ERROR no matching macro rule

(defmacro two-set? (macro-rules
  [(#{_ _}) false]
   ;^^^^^^ ERROR set patterns must either be empty or a zero or more match
))