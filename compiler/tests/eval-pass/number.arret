(import [stdlib base])
(import [stdlib test])

(defn test-zero? ()
  (assert-eq true (zero? 0))
  (assert-eq true (zero? 0.0))

  (assert-eq false (zero? 10))
  (assert-eq false (zero? 10.0))
  (assert-eq false (zero? ##NaN))
  (assert-eq false (zero? ##Inf))
  (assert-eq false (zero? ##-Inf)))

(defn test-nan? ()
  (assert-eq false (nan? 10.0))
  (assert-eq true (nan? ##NaN))
  (assert-eq false (nan? ##Inf))
  (assert-eq false (nan? ##-Inf)))


(defn test-infinite? ()
  (assert-eq false (infinite? 3.0))
  (assert-eq true (infinite? ##Inf))
  (assert-eq true (infinite? ##-Inf))
  (assert-eq false (infinite? ##NaN)))

(defn test-float ()
  (assert-eq 1.0 (float 1))
  (assert-eq 0.0 (float 0))
  (assert-eq -1.0 (float -1))

  (assert-eq 1.0 (float 1.0))
  (assert-eq 0.0 (float 0.0))
  (assert-eq -1.0 (float -1.0)))

(defn test-int ()
  (assert-eq 1 (int 1))
  (assert-eq 0 (int 0))
  (assert-eq -1 (int -1))

  ; TODO: Test error cases
  (assert-eq 1 (int 1.0))
  (assert-eq 0 (int 0.0))
  (assert-eq -1 (int -1.0)))

(defn main! () ->! ()
  (test-zero?)
  (test-nan?)
  (test-infinite?)
  (test-float)
  (test-int)
  ())